name: Create Release

on:
  push:
    branches:
      - 'main'
    paths:
      - 'Dockerfile'
      - 'start.sh'
  workflow_dispatch:

permissions: 
  contents: write

jobs:
  Create_Version_Tag:
    runs-on: container
    outputs:
      tag_name: ${{ steps.new-tag.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get new Tag
        id: new-tag
        run: |
          echo "tag_name=$( sh ./workflowHelpers/get-version.sh )" >> $GITHUB_OUTPUT
      - name: Create Tag ${{ steps.new-tag.outputs.tag_name }} object
        run: |
          curl -L -s --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --url https://api.github.com/repos/${{ github.repository }}/git/tags \
            -d '{ 
              "tag":"${{ steps.new-tag.outputs.tag_name }}", 
              "message":"tag from container", 
              "object":"${{ github.sha }}", 
              "type":"commit"
            }'
      - name: Create Tag ${{ steps.new-tag.outputs.tag_name }} reference
        run: |
          curl -L -s --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --url https://api.github.com/repos/${{ github.repository }}/git/refs \
            -d '{
              "ref":"refs/tags/${{ steps.new-tag.outputs.tag_name }}",
              "sha":"${{ github.sha }}"
            }'

  Create_Release:
    runs-on: container
    needs: Create_Version_Tag
    outputs:
      release_id: ${{ steps.new-release.outputs.release_id }}
    steps:
      - name: Create Release ${{ needs.Create_Version_Tag.outputs.tag_name }}
        id: new-release
        run: |
          echo "release_id=$(
            curl -L -s --fail-with-body \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              --url https://api.github.com/repos/${{ github.repository }}/releases \
              -d '{
                "tag_name":"${{ needs.Create_Version_Tag.outputs.tag_name }}",
                "name":"${{ needs.Create_Version_Tag.outputs.tag_name }} Release",
                "body":"Description of the release",
                "draft":false,
                "prerelease":false,
                "generate_release_notes":false
              }' | jq .id
            )" >> $GITHUB_OUTPUT

  Upload_assets:
    runs-on: container
    needs: [Create_Release, Create_Version_Tag]
    steps:
      - name: Generate Archive name
        id: archive_name
        run: echo "arch_name=runner-${{ needs.Create_Version_Tag.outputs.tag_name }}.tar.gz" >> $GITHUB_OUTPUT
      - name: Prepare assets archive ${{ steps.archive_name.outputs.arch_name }}
        run: |
          tar -czf "${{ steps.archive_name.outputs.arch_name }}" \
            Dockerfile \
            start.sh 
      - name: Upload archive ${{ steps.archive_name.outputs.arch_name }}
        run: |
          curl -L -s --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            --url "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ needs.Create_Release.outputs.release_id }}/assets?name=${{ steps.archive_name.outputs.arch_name }}" \
            --data-binary "@${{ steps.archive_name.outputs.arch_name }}"
